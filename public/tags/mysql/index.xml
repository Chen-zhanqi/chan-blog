<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mysql - Tag - Chan-技术与生活</title>
        <link>https://chenzqi.cn/tags/mysql/</link>
        <description>mysql - Tag - Chan-技术与生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>czq181020@gmail.com (Chan)</managingEditor>
            <webMaster>czq181020@gmail.com (Chan)</webMaster><lastBuildDate>Mon, 20 Jul 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://chenzqi.cn/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>PyQt5多页面跳转</title>
    <link>https://chenzqi.cn/posts/2020/20200720_pyqt5%E5%A4%9A%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/</link>
    <pubDate>Mon, 20 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2020/20200720_pyqt5%E5%A4%9A%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/</guid>
    <description><![CDATA[::: tip Qt designer 和 代码进行 Qt 开发实现页面跳转不同，本文记录 designer 开发 ::: PyQt5 多页面跳转 借助一个 Controller 控制器来实现，大体思路如下 # 利用一个控制器来控制页面的跳转 class]]></description>
</item>
<item>
    <title>MySQL连接池</title>
    <link>https://chenzqi.cn/posts/2020/20200710_mysql%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
    <pubDate>Fri, 10 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2020/20200710_mysql%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
    <description><![CDATA[::: tip 每次连接mysql数据库请求时，都是独立的去请求访问，浪费资源，访问数量达到一定数量时，对mysql的性能会产生较大的影响。因此，通常会]]></description>
</item>
<item>
    <title>SQL写入与更新语句优化</title>
    <link>https://chenzqi.cn/posts/2020/20200629_sql%E5%86%99%E5%85%A5%E4%B8%8E%E6%9B%B4%E6%96%B0%E8%AF%AD%E5%8F%A5%E4%BC%98%E5%8C%96/</link>
    <pubDate>Mon, 29 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2020/20200629_sql%E5%86%99%E5%85%A5%E4%B8%8E%E6%9B%B4%E6%96%B0%E8%AF%AD%E5%8F%A5%E4%BC%98%E5%8C%96/</guid>
    <description><![CDATA[::: tip SQL写入与更新语句优化记录 ::: 数据 # 要写入的字典数据 data_dict = dict( fzID=data.get(&#39;fzID&#39;), statusCode=data.get(&#39;statusCode&#39;), statusName=data.get(&#39;statusName&#39;), thumb=data.get(&#34;thumb&#34;), atArea=data.get(&#34;atArea&#34;), buildingName=data.get(&#34;buildingName&#34;), communityName=data.get(&#34;communityName&#34;), areaSize=data.get(&#34;areaSize&#34;), startPrice=data.get(&#34;startPrice&#34;), currentPrice=data.get(&#34;currentPrice&#34;), unitPrice=data.get(&#34;unitPrice&#34;), buildingType=data.get(&#34;buildingType&#34;), bTypeName=data.get(&#34;bTypeName&#34;), taxesBy=data.get(&#34;taxesBy&#34;), taxesName=data.get(&#34;taxesName&#34;), canLoan=data.get(&#34;canLoan&#34;), LoanText=data.get(&#34;LoanText&#34;), discountRate=data.get(&#34;discountRate&#34;), puchaseLimit=data.get(&#34;puchaseLimit&#34;), countyName=countyName, startTime=data.get(&#34;startTime&#34;), endTime=data.get(&#34;endTime&#34;), editDate=data.get(&#34;editDate&#34;), competePersons=data.get(&#34;competePersons&#34;), callTimes=data.get(&#34;callTimes&#34;), yijialv=data.get(&#34;yijialv&#34;), ccode=data.get(&#34;ccode&#34;), ajklink=data.get(&#34;ajklink&#34;), bemetro=data.get(&#34;bemetro&#34;), jiaofu=jiaofu ) # data_dict = { # &#39;fzID&#39;: &#39;6342304417171&#39;, #]]></description>
</item>
</channel>
</rss>
