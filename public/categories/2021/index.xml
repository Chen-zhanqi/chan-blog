<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>2021 - Category - Chan-技术与生活</title>
        <link>https://chenzqi.cn/categories/2021/</link>
        <description>2021 - Category - Chan-技术与生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>czq181020@gmail.com (Chan)</managingEditor>
            <webMaster>czq181020@gmail.com (Chan)</webMaster><lastBuildDate>Sun, 20 Jun 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://chenzqi.cn/categories/2021/" rel="self" type="application/rss+xml" /><item>
    <title>Go实现封装HttpRequest方法</title>
    <link>https://chenzqi.cn/posts/2021/20210620_go%E5%B0%81%E8%A3%85httprequest%E6%96%B9%E6%B3%95/</link>
    <pubDate>Sun, 20 Jun 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210620_go%E5%B0%81%E8%A3%85httprequest%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[package utils import ( &#34;bytes&#34; &#34;encoding/json&#34; &#34;io/ioutil&#34; &#34;net/http&#34; &#34;time&#34; ) func HttpRequest(method string, url string, data interface{}, result interface{}, header map[string]interface{}, queryParams map[string]interface{}) (response *http.Response, resMap interface{}, err error) { var client = http.Client{ Timeout: 3 * time.Second, } buf := bytes.NewBuffer(nil) encoder := json.NewEncoder(buf) if err = encoder.Encode(data); err != nil { return nil, nil, err } request, err := http.NewRequest(method, url, buf) if err != nil { return]]></description>
</item>
<item>
    <title>Golang问题汇总 - (持续更新...)</title>
    <link>https://chenzqi.cn/posts/2021/20210609_golang%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</link>
    <pubDate>Wed, 09 Jun 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210609_golang%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</guid>
    <description><![CDATA[题号 题目 1 Golang中除了加Mutex锁以外还有哪些方式安全读写共享变量 2 无缓冲Chan的发送和接收是否同步 3 Golang并发机制以及它所]]></description>
</item>
<item>
    <title>GO参数传递</title>
    <link>https://chenzqi.cn/posts/2021/20210519_go%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</link>
    <pubDate>Wed, 19 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210519_go%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</guid>
    <description><![CDATA[参数传递 Go在传递参数时是传值还是传引用，不同的选择会影响我们在函数中修改入参时是否会影响调用方看到的数据。 ::: tip 传值和传引用两者的区别 传值：]]></description>
</item>
<item>
    <title>Liunx Navicat premium 15 激活</title>
    <link>https://chenzqi.cn/posts/2021/20210506_liunx-navicat-premium-15-%E6%BF%80%E6%B4%BB/</link>
    <pubDate>Thu, 06 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210506_liunx-navicat-premium-15-%E6%BF%80%E6%B4%BB/</guid>
    <description><![CDATA[一、相关工具 navicat15-premium-cs.AppImage：Navicat 15 premium 官方简体中文试用版 navicat-patcher：]]></description>
</item>
<item>
    <title>pyinstaller打包scrapy项目</title>
    <link>https://chenzqi.cn/posts/2021/20210410_pyinstaller%E6%89%93%E5%8C%85scrapy%E9%A1%B9%E7%9B%AE/</link>
    <pubDate>Sat, 10 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210410_pyinstaller%E6%89%93%E5%8C%85scrapy%E9%A1%B9%E7%9B%AE/</guid>
    <description><![CDATA[简介 pyinstaller -F xxx.py 打包后会生成xxx.spec文件，，spec文件其实就相当于一个打包的架构文件，里面写了要怎么打包，类似于docker中的Dock]]></description>
</item>
<item>
    <title>SCP-文件传输</title>
    <link>https://chenzqi.cn/posts/2021/20210326_scp%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
    <pubDate>Fri, 26 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210326_scp%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
    <description><![CDATA[将本机文件复制到远程服务器上 # scp /home/administrator/news.txt root@127.0.0.1:/etc/squid /home/administrator/ 本地文件的绝对路径 news.txt 要复制到服务器上的本地文件 root 通过root用户登录到远程服务器（也可以使用其他拥有同]]></description>
</item>
<item>
    <title>jwt 生成与验证 - Python</title>
    <link>https://chenzqi.cn/posts/2021/20210320_jwt%E7%94%9F%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81/</link>
    <pubDate>Sat, 20 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210320_jwt%E7%94%9F%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81/</guid>
    <description><![CDATA[生成与验证 data: 自定义数据, 如 {'username':user_name, 'user_id': user_info.id} 验证通过后在payload中获取 import jwt from datetime import datetime,timedelta SECRECT_KEY = b&#39;\x92R!\x8e\xc6\x9c\xb3\x89#\xa6\x0c\xcb\xf6\xcb\xd7\xc&#39; def genToken(data): expInt = datetime.utcnow() + timedelta(days=1) iat = datetime.utcnow() payload = { &#39;exp&#39;: expInt, &#39;iat&#39;: iat, &#39;data&#39;: data } token = jwt.encode(payload, key = SECRECT_KEY, algorithm=&#39;HS256&#39;) return bytes.decode(token)]]></description>
</item>
<item>
    <title>VSCode配置记录</title>
    <link>https://chenzqi.cn/posts/2021/20210312_vscode%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Fri, 12 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210312_vscode%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[VSCode空格 问题： 空格太小，只占半个字符宽度 方法： 左上角 文件-&gt;首选项-&gt;设置,在搜索栏里搜font 把Editor:Font]]></description>
</item>
<item>
    <title>Nginx常见配置记录</title>
    <link>https://chenzqi.cn/posts/2021/20210305_nginx%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Fri, 05 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>https://chenzqi.cn/posts/2021/20210305_nginx%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[禁止ip访问 server { listen 80 default; server_name _; return 500; } or server { listen 80 dufault; server_name _; rewrite ^(.*) http://www.xxx.cn permanent; } or server { listen 80 default; server_name _; server_name xxx.cn return 500; } 域名重定向 server { listen 80; server_name xxx.cn; if ($host = &#39;xxx.cn&#39; ) { rewrite ^/(.*)$ http://xx.xxx.com/$1 permanent; } }]]></description>
</item>
</channel>
</rss>
