<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>2019 - Category - Chan-技术与生活</title>
        <link>http://example.org/categories/2019/</link>
        <description>2019 - Category - Chan-技术与生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>czq181020@gmail.com (Chan)</managingEditor>
            <webMaster>czq181020@gmail.com (Chan)</webMaster><lastBuildDate>Thu, 20 Jun 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/2019/" rel="self" type="application/rss+xml" /><item>
    <title>某考研查询微信小程序爬虫</title>
    <link>http://example.org/posts/2019/20190620_xxx%E8%80%83%E7%A0%94%E6%9F%A5%E8%AF%A2%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%88%AC%E8%99%AB/</link>
    <pubDate>Thu, 20 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190620_xxx%E8%80%83%E7%A0%94%E6%9F%A5%E8%AF%A2%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%88%AC%E8%99%AB/</guid>
    <description><![CDATA[:::tip 解决某考研查询某小程序jwt权限认证与采集 ::: 前言 日常采集数据时, 有很多需要登录才能获取的数据, 不能解决权限认证这个问题, 就无法获取到想要采]]></description>
</item>
<item>
    <title>Elasticsearch介绍与Python实现</title>
    <link>http://example.org/posts/2019/20190610_elasticsearch%E4%BB%8B%E7%BB%8D%E4%B8%8Epython%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Mon, 10 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190610_elasticsearch%E4%BB%8B%E7%BB%8D%E4%B8%8Epython%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[简介 分布式的实时文档存储，每个字段可以被索引与搜索 分布式实时分析搜索引擎 胜任上百个服务节点的扩展，支持 PB 级别的结构化或者非结构化数据 Elasticsearch 的安装]]></description>
</item>
<item>
    <title>Dockerfile 命令记录</title>
    <link>http://example.org/posts/2019/20190605_dockerfile-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
    <pubDate>Wed, 05 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190605_dockerfile-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
    <description><![CDATA[:::tip Dockerfile 命令 ::: Dockerfile 指令详解 1 FROM 指定基础镜像 FROM 指令用于指定其后构建新镜像所使用的基础镜像。FROM 指令必是 Dockerfile 文件中的首条命令，启动构建流程后，Doc]]></description>
</item>
<item>
    <title>Selenium Python 自动化</title>
    <link>http://example.org/posts/2019/20190530_selenium-python-%E8%87%AA%E5%8A%A8%E5%8C%96/</link>
    <pubDate>Thu, 30 May 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190530_selenium-python-%E8%87%AA%E5%8A%A8%E5%8C%96/</guid>
    <description><![CDATA[准备工作 安装seleniumm pip install selenium 下载浏览器驱动 Firefox浏览器驱动：geckodriver Chrome浏览器驱动：chromedri]]></description>
</item>
<item>
    <title>selenium启动Chrome配置参数</title>
    <link>http://example.org/posts/2019/20190530_selenium%E5%90%AF%E5%8A%A8chrome%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0/</link>
    <pubDate>Thu, 30 May 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190530_selenium%E5%90%AF%E5%8A%A8chrome%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0/</guid>
    <description><![CDATA[:::tip selenium配置 ::: 每次当selenium启动chrome浏览器的时候，chrome浏览器很干净，没有插件、没有收藏、没有历史记录，这是]]></description>
</item>
<item>
    <title>异常处理库merry的用法</title>
    <link>http://example.org/posts/2019/20190521_%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%BA%93merry/</link>
    <pubDate>Tue, 21 May 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190521_%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%BA%93merry/</guid>
    <description><![CDATA[实例 算术运算和文件写入的例子 def process(num1, num2, file): result = num1 / num2 with open(file, &#39;w&#39;, encoding=&#39;utf-8&#39;) as f: f.write(str(result)) 定义了一个 process 方法，接收三个参数，前两个参数是 num1 和 num2，第三个参数是 file。]]></description>
</item>
<item>
    <title>PyQt5桌面程序记录</title>
    <link>http://example.org/posts/2019/20190515_pyqt5%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Wed, 15 May 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190515_pyqt5%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[:::tip PyQt5编程 ::: 工具 记录为公司人员写的便携操作数据库房源数据程序, UI与逻辑层分离，使用 Qt Designer + PyQt5完成。pycharm配置PyUIC]]></description>
</item>
<item>
    <title>服务器项目命令记录</title>
    <link>http://example.org/posts/2019/20190502_%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Thu, 02 May 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190502_%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[RYP有限公司 Flask workon flaskvir [root@izwz94gdegum84cnrx9rtoz ~]# cd pythoncode/mysqlinit [root@izwz94gdegum84cnrx9rtoz mysqlinit]# pwd /root/pythoncode/mysqlinit [root@izwz94gdegum84cnrx9rtoz mysqlinit]# ls dump.rdb infos logs manage.py migrations __pycache__ requirements.txt utils [root@izwz94gdegum84cnrx9rtoz mysqlinit]# ps -ef | grep gunicorn root 4319 1 0 Nov18 ? 00:01:39 /root/.env/flaskvir/bin/python3.7 /root/.env/flaskvir/bin/gunicorn -w 20 -b 0.0.0.0:5000 manage:app root 4726 4319 0 Nov18 ? 00:00:21 /root/.env/flaskvir/bin/python3.7 /root/.env/flaskvir/bin/gunicorn -w 20 -b 0.0.0.0:5000 manage:app [root@izwz94gdegum84cnrx9rtoz mysqlinit]# kill PID [root@izwz94gdegum84cnrx9rtoz mysqlinit]#]]></description>
</item>
<item>
    <title>Redis代理IP池</title>
    <link>http://example.org/posts/2019/20190425_redis%E4%BB%A3%E7%90%86ip%E6%B1%A0/</link>
    <pubDate>Thu, 25 Apr 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190425_redis%E4%BB%A3%E7%90%86ip%E6%B1%A0/</guid>
    <description><![CDATA[:::tip Redis搭建爬虫代理IP池 ::: # -*- coding: utf-8 -*- &#34;&#34;&#34; @file: proxy.py @desc: 爬虫IP代理池 @Author: Chenzq @Wechat: 15690833097 @contact: czq181020@gmail.com &#34;&#34;&#34; import json import requests import redis import datetime, time from taobao_sale.settings import (REDIS_HOST, REDIS_PORT, REDIS_PASSWORD, PROXY_POOL_COUNT, PROXY_PULL_COUNT, PROXY_URL) class RedisClient(object): def __init__(self, host=REDIS_HOST, port=REDIS_PORT): if REDIS_PASSWORD: self._db = redis.StrictRedis(host=host, port=port, password=REDIS_PASSWORD)]]></description>
</item>
<item>
    <title>爬取微信公众号文章</title>
    <link>http://example.org/posts/2019/20190420_python%E7%88%AC%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/</link>
    <pubDate>Sat, 20 Apr 2019 00:00:00 &#43;0000</pubDate>
    <author>Chan</author>
    <guid>http://example.org/posts/2019/20190420_python%E7%88%AC%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/</guid>
    <description><![CDATA[步骤 使用 Fiddler 抓取公众号接口数据 使用 Python 脚本获取公众号所有历史文章数据 保存历史文章 Fiddler 抓包 使用微信桌面客户端，打开某个公众号的历史文章，这里以我的公]]></description>
</item>
</channel>
</rss>
